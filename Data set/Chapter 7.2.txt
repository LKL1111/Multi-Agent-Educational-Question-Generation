 7.3 WiFi: 802.11 Wireless LANs
 Pervasive in the workplace, the home, educational institutions, caf¨¦s, airports, and 
street corners, wireless LANs are now one of the most important access network 
technologies in the Internet today. Although many technologies and standards for 
wireless LANs were developed in the 1990s, one particular class of standards has 
clearly emerged as the winner: the IEEE 802.11 wireless LAN, also known as WiFi. 
In this section, we¡¯ll take a close look at 802.11 wireless LANs, examining its frame 
structure, its medium access protocol, and its internetworking of 802.11 LANs with 
wired Ethernet LANs.
 There are several 802.11 standards for wireless LAN technology in the IEEE 
802.11 (¡°WiFi¡±) family, as summarized in Table 7.1. The different 802.11 standards 
all share some common characteristics. They all use the same medium access proto
col, CSMA/CA, which we¡¯ll discuss shortly. All three use the same frame structure 
for their link-layer frames as well. All three standards have the ability to reduce 
their transmission rate in order to reach out over greater distances. And, importantly, 
802.11 products are also all backwards compatible, meaning, for example, that a 
mobile capable only of 802.11g may still interact with a newer 802.11ac base station.
 However, as shown in Table 7.1, the standards have some major differences 
at the physical layer. 802.11 devices operate in two difference frequency ranges: 
2.4¨C2.485 GHz (referred to as the 2.4 GHz range) and 5.1 ¨C 5.8 GHz (referred to 
as the 5 GHz range). The 2.4 GHz range is an unlicensed frequency band, where 
802.11 devices may compete for frequency spectrum with 2.4 GHz phones and 
microwave ovens. At 5 GHz, 802.11 LANs have a shorter transmission distance 
for a given power level and suffer more from multipath propagation. The two most 
recent standards, 802.11n [IEEE 802.11n 2012] and 802.11ac [IEEE 802.11ac 2013; 
Cisco 802.11ac 2015] uses multiple input multiple-output (MIMO) antennas; i.e., 
two or more antennas on the sending side and two or more antennas on the receiving 
side that are transmitting/receiving different signals [Diggavi 2004]. 802.11ac base 
stations may transmit to multiple stations simultaneously, and use ¡°smart¡± antennas 
to adaptively beamform to target transmissions in the direction of a receiver. This 
decreases interference and increases the distance reached at a given data rate. The data 
rates shown in Table 7.1 are for an idealized environment, e.g., a receiver placed 1  
meter away from the base station, with no interference¡ªa scenario that we¡¯re 
unlikely to experience in practice! So as the saying goes, YMMV: Your Mileage (or 
in this case your wireless data rate) May Vary.
 7.3.1 The 802.11 Architecture
 Figure 7.7 illustrates the principal components of the 802.11 wireless LAN architec
ture. The fundamental building block of the 802.11 architecture is the basic service 
set (BSS). A BSS contains one or more wireless stations and a central base station, 
known as an access point (AP) in 802.11 parlance. Figure 7.7 shows the AP in each 
of two BSSs connecting to an interconnection device (such as a switch or router), 
which in turn leads to the Internet. In a typical home network, there is one AP and one 
router (typically integrated together as one unit) that connects the BSS to the Internet.
 As with Ethernet devices, each 802.11 wireless station has a 6-byte MAC 
address that is stored in the firmware of the station¡¯s adapter (that is, 802.11 net
work interface card). Each AP also has a MAC address for its wireless interface. As 
with Ethernet, these MAC addresses are administered by IEEE and are (in theory) 
 globally unique.
  As noted in Section 7.1, wireless LANs that deploy APs are often referred to 
as infrastructure wireless LANs, with the ¡°infrastructure¡± being the APs along 
with the wired Ethernet infrastructure that interconnects the APs and a router. Figure 
7.8 shows that IEEE 802.11 stations can also group themselves together to form an 
ad hoc network¡ªa network with no central control and with no connections to the 
¡°outside world.¡± Here, the network is formed ¡°on the fly,¡± by mobile devices that 
have found themselves in proximity to each other, that have a need to communi
cate, and that find no preexisting network infrastructure in their location. An ad hoc 
network might be formed when people with laptops get together (for example, in 
a conference room, a train, or a car) and want to exchange data in the absence of a 
centralized AP. There has been tremendous interest in ad hoc networking, as com
municating portable devices continue to proliferate. In this section, though, we¡¯ll 
focus our attention on infrastructure wireless LANs.
 Channels and Association
 In 802.11, each wireless station needs to associate with an AP before it can send or 
receive network-layer data. Although all of the 802.11 standards use association, 
we¡¯ll discuss this topic specifically in the context of IEEE 802.11b/g.
 When a network administrator installs an AP, the administrator assigns a one- 
or two-word Service Set Identifier (SSID) to the access point. (When you choose 
Wi-Fi under Setting on your iPhone, for example, a list is displayed showing the 
SSID of each AP in range.) The administrator must also assign a channel number 
to the AP. To understand channel numbers, recall that 802.11 operates in the fre
quency range of 2.4 GHz to 2.4835 GHz. Within this 85 MHz band, 802.11 defines 
11 partially overlapping channels. Any two channels are non-overlapping if and 
only if they are separated by four or more channels. In particular, the set of channels 
 1, 6, and 11 is the only set of three non-overlapping channels. This means that an 
administrator could create a wireless LAN with an aggregate maximum transmis
sion rate of 33 Mbps by installing three 802.11b APs at the same physical location, 
assigning channels 1, 6, and 11 to the APs, and interconnecting each of the APs 
with a switch.
 Now that we have a basic understanding of 802.11 channels, let¡¯s describe an 
interesting (and not completely uncommon) situation¡ªthat of a WiFi jungle. A WiFi 
jungle is any physical location where a wireless station receives a sufficiently strong 
signal from two or more APs. For example, in many caf¨¦s in New York City, a wire
less station can pick up a signal from numerous nearby APs. One of the APs might be 
managed by the caf¨¦, while the other APs might be in residential apartments near the 
caf¨¦. Each of these APs would likely be located in a different IP subnet and would 
have been independently assigned a channel.
 Now suppose you enter such a WiFi jungle with your phone, tablet, or  laptop, 
seeking wireless Internet access and a blueberry muffin. Suppose there are five 
APs in the WiFi jungle. To gain Internet access, your wireless device needs to join 
exactly one of the subnets and hence needs to associate with exactly one of the APs. 
Associating means the wireless device creates a virtual wire between itself and the 
AP. Specifically, only the associated AP will send data frames (that is, frames con
taining data, such as a datagram) to your wireless device, and your wireless device 
will send data frames into the Internet only through the associated AP. But how does 
your wireless device associate with a particular AP? And more fundamentally, how 
does your wireless device know which APs, if any, are out there in the jungle?
 The 802.11 standard requires that an AP periodically send beacon frames, each 
of which includes the AP¡¯s SSID and MAC address. Your wireless device, know
ing that APs are sending out beacon frames, scans the 11 channels, seeking beacon 
frames from any APs that may be out there (some of which may be transmitting 
on the same channel¡ªit¡¯s a jungle out there!). Having learned about available APs 
from the beacon frames, you (or your wireless device) select one of the APs for 
association.
 The 802.11 standard does not specify an algorithm for selecting which of 
the available APs to associate with; that algorithm is left up to the designers of 
the 802.11 firmware and software in your wireless device. Typically, the device 
chooses the AP whose beacon frame is received with the highest signal strength. 
While a high signal strength is good (see, e.g., Figure 7.3), signal strength is not 
the only AP characteristic that will determine the performance a device receives. 
In particular, it¡¯s possible that the selected AP may have a strong signal, but may 
be overloaded with other affiliated devices (that will need to share the wireless 
bandwidth at that AP), while an unloaded AP is not selected due to a slightly 
weaker signal. A number of alternative ways of choosing APs have thus recently 
been proposed [Vasudevan 2005; Nicholson 2006; Sundaresan 2006]. For an 
interesting and down-to-earth discussion of how signal strength is measured, see 
[Bardwell 2004].
 The process of scanning channels and listening for beacon frames is known 
as passive scanning (see Figure 7.9a). A wireless device can also perform active 
scanning, by broadcasting a probe frame that will be received by all APs within the 
wireless device¡¯s range, as shown in Figure 7.9b. APs respond to the probe request 
frame with a probe response frame. The wireless device can then choose the AP with 
which to associate from among the responding APs.
 After selecting the AP with which to associate, the wireless device sends an asso
ciation request frame to the AP, and the AP responds with an association response 
frame. Note that this second request/response handshake is needed with active scan
ning, since an AP responding to the initial probe request frame doesn¡¯t know which 
of the (possibly many) responding APs the device will choose to associate with, in 
much the same way that a DHCP client can choose from among multiple DHCP 
servers (see Figure 4.21). Once associated with an AP, the device will want to join 
the subnet (in the IP addressing sense of Section 4.3.3) to which the AP belongs. 
Thus, the device will typically send a DHCP discovery message (see Figure 4.21) 
into the subnet via the AP in order to obtain an IP address on the subnet. Once the 
address is obtained, the rest of the world then views that device simply as another 
host with an IP address in that subnet.
 In order to create an association with a particular AP, the wireless device may 
be required to authenticate itself to the AP. 802.11 wireless LANs provide a number 
of alternatives for authentication and access. One approach, used by many compa
nies, is to permit access to a wireless network based on a device¡¯s MAC address. A 
second approach, used by many Internet caf¨¦s, employs usernames and passwords. 
 In both cases, the AP typically communicates with an authentication server, relay
ing information between the wireless device and the authentication server using a 
protocol such as RADIUS [RFC 2865] or DIAMETER [RFC 3588]. Separating the 
authentication server from the AP allows one authentication server to serve many 
APs, centralizing the (often sensitive) decisions of authentication and access within 
the single server, and keeping AP costs and complexity low. We¡¯ll see in chapter 8 
that the new IEEE 802.11i protocol defining security aspects of the 802.11 protocol 
family takes precisely this approach.
 7.3.2 The 802.11 MAC Protocol
 Once a wireless device is associated with an AP, it can start sending and receiving 
data frames to and from the access point. But because multiple wireless devices, 
or the AP itself may want to transmit data frames at the same time over the same 
channel, a multiple access protocol is needed to coordinate the transmissions. In 
the following, we'll refer to the devices or the AP as wireless ¡°stations¡± that share 
the multiple access channel. As discussed in Chapter 6 and Section 7.2.1, broadly 
speaking there are three classes of multiple access protocols: channel partitioning 
(including CDMA), random access, and taking turns. Inspired by the huge suc
cess of Ethernet and its random access protocol, the designers of 802.11 chose a 
random access protocol for 802.11 wireless LANs. This random access protocol 
is referred to as CSMA with collision avoidance, or more succinctly as CSMA/
 CA. As with Ethernet¡¯s CSMA/CD, the ¡°CSMA¡± in CSMA/CA stands for ¡°carrier 
sense multiple access,¡± meaning that each station senses the channel before trans
mitting, and refrains from transmitting when the channel is sensed busy. Although 
both  Ethernet and 802.11 use carrier-sensing random access, the two MAC protocols 
have important differences. First, instead of using collision detection, 802.11 uses 
collision-avoidance techniques. Second, because of the relatively high bit error rates 
of wireless channels, 802.11 (unlike Ethernet) uses a link-layer acknowledgment/
 retransmission (ARQ) scheme. We¡¯ll describe 802.11¡¯s collision-avoidance and 
link-layer acknowledgment schemes below.
 Recall from Sections 6.3.2 and 6.4.2 that with Ethernet¡¯s collision-detection 
algorithm, an Ethernet station listens to the channel as it transmits. If, while transmit
ting, it detects that another station is also transmitting, it aborts its transmission and 
tries to transmit again after waiting a small, random amount of time. Unlike the 802.3 
Ethernet protocol, the 802.11 MAC protocol does not implement collision detection. 
There are two important reasons for this:
 ? The ability to detect collisions requires the ability to send (the station¡¯s own 
signal) and receive (to determine whether another station is also transmitting) at 
the same time. Because the strength of the received signal is typically very small 
compared to the strength of the transmitted signal at the 802.11 adapter, it is 
costly to build hardware that can detect a collision.
 ? More importantly, even if the adapter could transmit and listen at the same time 
(and presumably abort transmission when it senses a busy channel), the adapter 
would still not be able to detect all collisions, due to the hidden terminal problem 
and fading, as discussed in Section 7.2.
 Because 802.11wireless LANs do not use collision detection, once a station 
begins to transmit a frame, it transmits the frame in its entirety; that is, once a station 
gets started, there is no turning back. As one might expect, transmitting entire frames 
(particularly long frames) when collisions are prevalent can significantly degrade a 
multiple access protocol¡¯s performance. In order to reduce the likelihood of collisions, 
802.11 employs several collision-avoidance techniques, which we¡¯ll shortly discuss.
 Before considering collision avoidance, however, we¡¯ll first need to examine 
802.11¡¯s link-layer acknowledgment scheme. Recall from Section 7.2 that when a 
station in a wireless LAN sends a frame, the frame may not reach the destination sta
tion intact for a variety of reasons. To deal with this non-negligible chance of failure, 
the 802.11 MAC protocol uses link-layer acknowledgments. As shown in Figure 7.10, 
when the destination station receives a frame that passes the CRC, it waits a short 
period of time known as the Short Inter-frame Spacing (SIFS) and then sends back 
 an acknowledgment frame. If the transmitting station does not receive an acknowl
edgment within a given amount of time, it assumes that an error has occurred and 
retransmits the frame, using the CSMA/CA protocol to access the channel. If an 
acknowledgment is not received after some fixed number of retransmissions, the trans
mitting station gives up and discards the frame.
 Having discussed how 802.11 uses link-layer acknowledgments, we¡¯re now in a 
position to describe the 802.11 CSMA/CA protocol. Suppose that a station (wireless 
device or an AP) has a frame to transmit.
 1. If initially the station senses the channel idle, it transmits its frame after a  
short period of time known as the Distributed Inter-frame Space (DIFS);  
see  Figure 7.10.
 2. Otherwise, the station chooses a random backoff value using binary exponen
tial backoff (as we encountered in Section 6.3.2) and counts down this value 
after DIFS when the channel is sensed idle. While the channel is sensed busy, 
the counter value remains frozen.
 3. When the counter reaches zero (note that this can only occur while the chan
nel is sensed idle), the station transmits the entire frame and then waits for an 
acknowledgment.
 4. If an acknowledgment is received, the transmitting station knows that its frame 
has been correctly received at the destination station. If the station has another 
frame to send, it begins the CSMA/CA protocol at step 2. If the acknowledg
ment isn¡¯t received, the transmitting station reenters the backoff phase in step 2,  
with the random value chosen from a larger interval.
 Recall that under Ethernet¡¯s CSMA/CD, multiple access protocol (Section 6.3.2), 
a station begins transmitting as soon as the channel is sensed idle. With CSMA/CA, 
however, the station refrains from transmitting while counting down, even when it 
senses the channel to be idle. Why do CSMA/CD and CDMA/CA take such different 
approaches here?
 To answer this question, let¡¯s consider a scenario in which two stations each 
have a data frame to transmit, but neither station transmits immediately because each 
senses that a third station is already transmitting. With Ethernet¡¯s CSMA/CD, the 
two stations would each transmit as soon as they detect that the third station has 
finished transmitting. This would cause a collision, which isn¡¯t a serious issue in 
CSMA/CD, since both stations would abort their transmissions and thus avoid the 
useless transmissions of the remainders of their frames. In 802.11, however, the situ
ation is quite different. Because 802.11 does not detect a collision and abort trans
mission, a frame suffering a collision will be transmitted in its entirety. The goal 
in 802.11 is thus to avoid collisions whenever possible. In 802.11, if the two sta
tions sense the channel busy, they both immediately enter random backoff, hopefully 
choosing different backoff values. If these values are indeed different, once the chan
nel becomes idle, one of the two stations will begin transmitting before the other, and 
(if the two stations are not hidden from each other) the ¡°losing station¡± will hear the 
 ¡°winning station¡¯s¡± signal, freeze its counter, and refrain from transmitting until the 
winning station has completed its transmission. In this manner, a costly collision is 
avoided. Of course, collisions can still occur with 802.11 in this scenario: The two 
stations could be hidden from each other, or the two stations could choose random 
backoff values that are close enough that the transmission from the station starting 
first have yet to reach the second station. Recall that we encountered this problem 
earlier in our discussion of random access algorithms in the context of Figure 6.12.
 Dealing with Hidden Terminals: RTS and CTS
 The 802.11 MAC protocol also includes a nifty (but optional) reservation scheme 
that helps avoid collisions even in the presence of hidden terminals. Let¡¯s investi
gate this scheme in the context of Figure 7.11, which shows two wireless  stations 
and one access point. Both of the wireless stations are within range of the AP 
(whose  coverage is shown as a shaded circle) and both have associated with the AP. 
However, due to fading, the signal ranges of wireless stations are limited to the inte
riors of the shaded circles shown in Figure 7.11. Thus, each of the wireless stations 
is hidden from the other, although neither is hidden from the AP.
 Let¡¯s now consider why hidden terminals can be problematic. Suppose Station H1 is 
transmitting a frame and halfway through H1¡¯s transmission, Station H2 wants to send a 
frame to the AP. H2, not hearing the transmission from H1, will first wait a DIFS interval 
and then transmit the frame, resulting in a collision. The channel will therefore be wasted 
during the entire period of H1¡¯s transmission as well as during H2¡¯s transmission.
 In order to avoid this problem, the IEEE 802.11 protocol allows a station to 
use a short Request to Send (RTS) control frame and a short Clear to Send (CTS) 
control frame to reserve access to the channel. When a sender wants to send a DATA 
 frame, it can first send an RTS frame to the AP, indicating the total time required 
to transmit the DATA frame and the acknowledgment (ACK) frame. When the AP 
receives the RTS frame, it responds by broadcasting a CTS frame. This CTS frame 
serves two purposes: It gives the sender explicit permission to send and also instructs 
the other stations not to send for the reserved duration.
 Thus, in Figure 7.12, before transmitting a DATA frame, H1 first broadcasts an RTS 
frame, which is heard by all stations in its circle, including the AP. The AP then responds 
 with a CTS frame, which is heard by all stations within its range, including H1 and H2. 
Station H2, having heard the CTS, refrains from transmitting for the time specified in the 
CTS frame. The RTS, CTS, DATA, and ACK frames are shown in Figure 7.12.
 The use of the RTS and CTS frames can improve performance in two important 
ways:
 ? The hidden station problem is mitigated, since a long DATA frame is transmitted 
only after the channel has been reserved.
 ? Because the RTS and CTS frames are short, a collision involving an RTS or CTS 
frame will last only for the duration of the short RTS or CTS frame. Once the RTS 
and CTS frames are correctly transmitted, the following DATA and ACK frames 
should be transmitted without collisions.
 You are encouraged to check out the 802.11 applet in the textbook¡¯s Web site. 
This interactive applet illustrates the CSMA/CA protocol, including the RTS/CTS 
exchange sequence.
 Although the RTS/CTS exchange can help reduce collisions, it also introduces 
delay and consumes channel resources. For this reason, the RTS/CTS exchange is 
only used (if at all) to reserve the channel for the transmission of a long DATA 
frame. In practice, each wireless station can set an RTS threshold such that the RTS/
 CTS sequence is used only when the frame is longer than the threshold. For many 
wireless stations, the default RTS threshold value is larger than the maximum frame 
length, so the RTS/CTS sequence is skipped for all DATA frames sent.
 Using 802.11 as a Point-to-Point Link
 Our discussion so far has focused on the use of 802.11 in a multiple access setting. 
We should mention that if two nodes each have a directional antenna, they can point 
their directional antennas at each other and run the 802.11 protocol over what is essen
tially a point-to-point link. Given the low cost of commodity 802.11 hardware, the use 
of directional antennas and an increased transmission power allow 802.11 to be used 
as an inexpensive means of providing wireless point-to-point connections over tens of 
kilometers distance. [Raman 2007] describes one of the first such multi-hop wireless 
networks, operating in the rural Ganges plains in India using point-to-point 802.11 links.

